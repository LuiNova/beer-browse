{"version":3,"sources":["app.js","main.js","components/infinite-scroller.js","components/overflow-menu.js","datasource/beer.js"],"names":["requirejs","config","baseUrl","paths","app","main","init","define","OverflowMenu","InfiniteScroller","Beer","console","log","scroller","document","querySelector","beerSource","url","menuEndpoint","beersEndpoint","this","infiniteScroller","dataSource","options","_classCallCheck","swipeable","PHYSICAL_ITEMS","physicalItems","PAGE_SIZE","pageSize","PROXIMITY_BOUNDARY","proximityBoundary","itemsCacheData","loadingItemHeight","loadingItemWidth","loadingItems","firstPhysicalItemIndex","middlePhysicalItemIndex","lastPhysicalItemIndex","firstPhysicalItem","lastPhysicalItem","firstPhysicalItemTranslateY","lastPhysicalItemTranslateY","requestInProgress","target","targetBCR","targetX","startX","currentX","translateX","draggingItem","scrollRunway","createElement","scrollRunwayEndBefore","scrollRunwayEnd","style","position","height","width","transition","appendChild","previousScrollTop","itemsRemovedInSuccession","addEventListeners","onResize","loadItems","_createClass","key","value","_this","window","addEventListener","e","onScroll","loadingItem","createLoadingElement","offsetHeight","offsetWidth","removeChild","delta","scrollTop","actualLastPhysicalItemTranslateY","proximityToLastPhysicalItem","proximityToFirstPhysicalItem","loadItemsUp","_this2","loadingHeight","i","hasLoadingItem","transform","classList","remove","nextIndexToPopulate","populateItems","slice","getStyles","then","response","getCategories","getBeer","items","fromCache","currentCacheDataLength","length","itemTranslateY","add","itemIndex","hasReusableItem","item","render","dataset","translateY","calculatePhysicalItemsIndex","loadingItemTranslateY","populateItemsTop","itemBeforeFirstPhysicalItemIndex","reusableItemIndex","hasItem","itemsLength","Math","max","parseInt","el","menuShowEl","menuHideEl","sideNavContainerEl","startY","currentY","touchingSideNav","supportsPassive","undefined","showSideNav","hideSideNav","blockClicks","onTouchStart","onTouchMove","onTouchEnd","contains","touches","pageY","requestAnimationFrame","update","sideNavContainerHeight","absTranslateY","abs","_this3","stopPropagation","_this4","removeEventListener","onTransitionEnd","_this5","_this6","CORS_PROXY","API_KEY","loadingTemplate","beerTemplate","menuUrl","beerUrl","nextItem","nextPageToken","obj","Promise","resolve","reject","params","_typeof","Object","keys","map","encodeURIComponent","join","xhr","XMLHttpRequest","open","method","onload","status","statusText","onerror","send","fetch","JSON","parse","data","assign","styleId","jsonResponse","pageToken","cloneNode","div","id","textContent","name","shortName","abv","ibu","description","date","Date","seconds","floor","interval"],"mappings":"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","file":"main.min.js","sourcesContent":["// For any third party dependencies, like jQuery, place them in the lib folder.\n\n// Configure loading modules from the lib directory,\n// except for 'app' ones, which are in a sibling\n// directory.\nrequirejs.config({\n    baseUrl: 'src/javascript',\n    paths: {\n        app: '../dist'\n    }\n});\n\n// Start loading the main app file. Put all of\n// your application logic in there.\nrequirejs(['main'], function(main) {\n    main.init();\n});","define('main', [\n    'components/overflow-menu',\n    'components/infinite-scroller',\n    'datasource/beer'\n], function(\n        OverflowMenu,\n        InfiniteScroller,\n        Beer\n    ) {\n    'use strict';\n    \n    return {\n        init: function() {\n            /* eslint-disable no-console */\n            console.log('App started');\n\n            new OverflowMenu();\n\n            const scroller = document.querySelector('#beers');\n            const beerSource = new Beer({\n                url: 'https://api.brewerydb.com/v2',\n                menuEndpoint: '/menu',\n                beersEndpoint: '/beers'\n            });\n\n            if (scroller) {\n                this.infiniteScroller = new InfiniteScroller(scroller, beerSource);\n            }\n        }\n    };\n});","define('components/infinite-scroller',[\n], function() {\n    'use strict';\n    \n    const PHYSICAL_ITEMS = 20;\n    const PAGE_SIZE = 10;\n    const PROXIMITY_BOUNDARY = 300;\n\n    class InfiniteScroller {\n\n        constructor(scroller, dataSource, options) {\n            options || (options = {});\n\n            this.scroller = scroller;\n            this.dataSource = dataSource;\n\n            // Options\n            this.swipeable = options.swipeable;\n            this.PHYSICAL_ITEMS = options.physicalItems || PHYSICAL_ITEMS;\n            this.PAGE_SIZE = options.pageSize || PAGE_SIZE;\n            this.PROXIMITY_BOUNDARY = options.proximityBoundary || PROXIMITY_BOUNDARY;\n            \n            // This will hold a cache of the data sent from server\n            this.itemsCacheData = [];\n\n            this.loadingItemHeight = 0;\n            this.loadingItemWidth = 0;\n            this.loadingItems = [];\n\n            this.physicalItems = [];\n            this.firstPhysicalItemIndex = -1;\n            this.middlePhysicalItemIndex = -1;\n            this.lastPhysicalItemIndex = -1;\n            this.firstPhysicalItem = null;\n            this.lastPhysicalItem = null;\n            this.firstPhysicalItemTranslateY = 0;\n            this.lastPhysicalItemTranslateY = 0;\n\n            this.requestInProgress = false;\n\n            // Reference to current item\n            this.target = null;\n            this.targetBCR = null;\n            this.targetX = 0;\n            this.startX = 0;\n            this.currentX = 0;\n            this.translateX = 0;\n            this.draggingItem = false;\n\n            // Create element to force scroll\n            this.scrollRunway = document.createElement('div');\n            this.scrollRunwayEndBefore = 0;\n            this.scrollRunwayEnd = 0;\n            this.scrollRunway.style.position = 'absolute';\n            this.scrollRunway.style.height = '1px';\n            this.scrollRunway.style.width = '1px';\n            this.scrollRunway.style.transition = 'transform 0.2s';\n            this.scroller.appendChild(this.scrollRunway);\n\n            this.previousScrollTop = 0;\n\n            this.itemsRemovedInSuccession = 0;\n\n            this.addEventListeners();\n\n            this.onResize();\n            this.loadItems();\n        }\n\n        addEventListeners() {\n            window.addEventListener('resize', (e) => this.onResize(e));\n\n            this.scroller.addEventListener('scroll', (e) => this.onScroll(e));\n        }\n\n        onResize() {\n            // On resize need to recalculate the translateY values for the elements\n            const loadingItem = this.dataSource.createLoadingElement();\n            this.scroller.appendChild(loadingItem);\n            this.loadingItemHeight = loadingItem.offsetHeight;\n            this.loadingItemWidth = loadingItem.offsetWidth;\n            this.scroller.removeChild(loadingItem);\n\n            // this.onScroll();\n        }\n\n        /**\n         * It then updates the visible\n         * elements, requesting more items from the dataSource if we have scrolled\n         * past the end of currently available content.\n         */\n        onScroll() {\n            if (this.requestInProgress) {\n                return;\n            }\n\n            const delta = this.scroller.scrollTop - this.previousScrollTop;\n            this.previousScrollTop = this.scroller.scrollTop;\n\n            /**\n             * if delta is greater than 0 then user is scrolling down\n             */\n            if (delta > 0) {\n                const actualLastPhysicalItemTranslateY = this.lastPhysicalItemTranslateY - (this.lastPhysicalItem.offsetHeight + 10);\n                const proximityToLastPhysicalItem = actualLastPhysicalItemTranslateY - (this.scroller.scrollTop + this.scroller.offsetHeight);\n\n                if (!this.requestInProgress && (proximityToLastPhysicalItem < this.PROXIMITY_BOUNDARY)) {\n                    this.loadItems();\n                }\n\n            } else if (delta < 0) {\n                const proximityToFirstPhysicalItem = this.scroller.scrollTop - this.firstPhysicalItemTranslateY;\n\n                if (!this.requestInProgress && this.firstPhysicalItemIndex !== 0 && (proximityToFirstPhysicalItem < this.PROXIMITY_BOUNDARY)) {\n                    this.loadItemsUp();\n                }\n            }\n        }\n\n        loadItems() {\n            this.requestInProgress = true;\n\n            let loadingHeight = this.lastPhysicalItemTranslateY;\n\n            // instead of appending 10 times, just append once\n            // let addingElems = false;\n            // const frag = document.createDocumentFragment();\n\n            // Loading items\n            for (let i = 0; i < this.PAGE_SIZE; i += 1) {\n                const hasLoadingItem = this.loadingItems[i];\n                const loadingItem = hasLoadingItem ? this.loadingItems[i] : this.dataSource.createLoadingElement();\n\n                loadingItem.style.position = 'absolute';\n                loadingItem.style.transform = `translateY(${loadingHeight}px)`;\n                loadingItem.style.width = '92%';\n                loadingItem.classList.remove('invisible');\n\n                // If loading item not in DOM then add it\n                if (!hasLoadingItem) {\n                    // addingElems = true;\n                    // frag.appendChild(loadingItem);\n                    this.scroller.appendChild(loadingItem);\n                }\n\n                this.loadingItems[i] = loadingItem;\n\n                loadingHeight += this.loadingItemHeight + 10; // loadingHeight is more of loadingTranslateYValue\n            }\n\n            // instead of appending 10 times, just append once\n            // if (addingElems) {\n            //     this.scroller.appendChild(frag);\n            // }\n\n            const nextIndexToPopulate = this.lastPhysicalItemIndex + 1;\n            // Check the cache\n            if (this.itemsCacheData[nextIndexToPopulate]) {\n                // use cache to populate items\n                this.populateItems(this.itemsCacheData.slice(nextIndexToPopulate, nextIndexToPopulate + 10), true);\n            } else {\n                // 10 items\n                // this.dataSource.next().then((response) => {\n                //     this.populateItems(response, false);\n                // });\n\n                /* eslint-disable no-console */\n                this.dataSource.getStyles().then((response) => {\n                    console.log('Styles: ', response);\n                });\n\n                this.dataSource.getCategories().then((response) => {\n                    console.log('Categories: ', response);\n                });\n\n                this.dataSource.getBeer().then((response) => {\n                    console.log('Beer for Style 1: ', response);\n                    this.populateItems(response, false);\n                });\n            }\n        }\n\n        populateItems(items, fromCache) {\n            const currentCacheDataLength = this.itemsCacheData.length;\n            const nextIndexToPopulate = this.lastPhysicalItemIndex + 1;\n\n            // let itemTranslateY = 0;\n            let itemTranslateY = this.lastPhysicalItemTranslateY;\n\n            for (let i = 0; i < items.length; i += 1) {\n\n                if (this.loadingItems[i]) {\n                    this.loadingItems[i].classList.add('invisible');\n                }\n\n                const itemIndex = (nextIndexToPopulate + i) % this.PHYSICAL_ITEMS;\n                const hasReusableItem = this.physicalItems[itemIndex];\n                const item = hasReusableItem ? this.dataSource.render(items[i], this.physicalItems[itemIndex]) : this.dataSource.render(items[i]);\n\n                item.style.position = 'absolute';\n                item.style.transform = `translateY(${itemTranslateY}px)`;\n                item.dataset.translateY = itemTranslateY;\n                item.style.width = '92%';\n\n                if (!hasReusableItem) {\n                    this.scroller.appendChild(item);\n                }\n\n                // We need to show right scrollbar size\n                if (!fromCache) {\n                    this.scrollRunwayEnd += item.offsetHeight + 10; // make 10 a constant\n                }\n                itemTranslateY += item.offsetHeight + 10;\n                \n                this.physicalItems[itemIndex] = item;\n                // this.itemsCacheData.push(items[i]);\n                this.itemsCacheData[currentCacheDataLength + i] = items[i];\n            }\n            \n            // This uses the updated physicalItemIndex props\n            this.calculatePhysicalItemsIndex(items.length);\n\n            // Update runway translate to update scrollbar\n            this.scrollRunway.style.transform = `translate(0,${this.scrollRunwayEnd}px)`;\n            this.requestInProgress = false;\n        }\n\n        loadItemsUp() {\n            this.requestInProgress = true;\n\n            let loadingItemTranslateY = this.firstPhysicalItemTranslateY;\n\n            for (let i = 9; i >= 0; i -= 1) {\n\n                const hasLoadingItem = this.loadingItems[i];\n                const loadingItem = hasLoadingItem ? this.loadingItems[i] : this.dataSource.createLoadingElement();\n\n                loadingItem.style.position = 'absolute';\n                loadingItem.style.transform = `translateY(${loadingItemTranslateY}px)`;\n                loadingItem.style.width = '92%';\n                loadingItem.classList.remove('invisible');\n\n                // If loading item not in DOM then add it\n                if (!hasLoadingItem) {\n                    // addingElems = true;\n                    // frag.appendChild(loadingItem);\n                    this.scroller.appendChild(loadingItem);\n                }\n\n                this.loadingItems[i] = loadingItem;\n\n                loadingItemTranslateY -= (this.loadingItemHeight + 10);\n            }\n\n            this.populateItemsTop();\n        }\n\n        populateItemsTop() {\n\n            const itemBeforeFirstPhysicalItemIndex = this.firstPhysicalItemIndex - 1;\n\n            let itemTranslateY = this.firstPhysicalItemTranslateY;\n\n            for (let i = itemBeforeFirstPhysicalItemIndex; i > itemBeforeFirstPhysicalItemIndex - 10; i -= 1) {\n\n                if (this.loadingItems[i % 10]) {\n                    this.loadingItems[i % 10].classList.add('invisible');\n                }\n\n                const reusableItemIndex = i % this.PHYSICAL_ITEMS;\n                const hasItem = this.physicalItems[reusableItemIndex];\n                const item = hasItem ? this.dataSource.render(this.itemsCacheData[i], this.physicalItems[reusableItemIndex]) : this.dataSource.render(this.itemsCacheData[i]);\n\n                item.style.position = 'absolute';\n                item.style.transform = `translateY(${itemTranslateY}px)`;\n                // We need these values to animate elements when removed\n                item.dataset.translateY = itemTranslateY;\n                item.style.width = '92%';\n\n                // this should never go inside when scrolling up otherwise we messed up\n                if (!hasItem) {\n                    this.scroller.appendChild(item);\n                }\n\n                itemTranslateY -= (item.offsetHeight + 10);\n                \n                this.physicalItems[reusableItemIndex] = item;\n            }\n\n            this.calculatePhysicalItemsIndex(-10);\n            this.requestInProgress = false;\n        }\n\n        calculatePhysicalItemsIndex(itemsLength) {\n            this.lastPhysicalItemIndex += itemsLength;\n            this.firstPhysicalItemIndex = Math.max(0, this.lastPhysicalItemIndex - (this.PHYSICAL_ITEMS - 1));\n            this.middlePhysicalItemIndex = this.firstPhysicalItemIndex + ((this.lastPhysicalItemIndex - this.firstPhysicalItemIndex + 1) / 2);\n\n            this.firstPhysicalItem = this.physicalItems[this.firstPhysicalItemIndex % this.PHYSICAL_ITEMS] || this.physicalItems[(this.firstPhysicalItemIndex + this.itemsRemovedInSuccession) % this.PHYSICAL_ITEMS];\n            this.lastPhysicalItem = this.physicalItems[this.lastPhysicalItemIndex % this.PHYSICAL_ITEMS] || this.physicalItems[(this.lastPhysicalItemIndex - this.itemsRemovedInSuccession) % this.PHYSICAL_ITEMS];\n\n            // this is used for the next\n            this.firstPhysicalItemTranslateY = parseInt(this.firstPhysicalItem.dataset.translateY, 10) - (this.firstPhysicalItem.offsetHeight + 10);\n            this.lastPhysicalItemTranslateY = parseInt(this.lastPhysicalItem.dataset.translateY, 10) + (this.lastPhysicalItem.offsetHeight + 10);\n            \n            this.itemsRemovedInSuccession = 0;\n        }\n    }\n\n    return InfiniteScroller;\n});","define('components/overflow-menu', [\n], function(\n    ) {\n    'use strict';\n    \n    class OverflowMenu {\n\n        constructor() {\n            this.el = document.querySelector('.js-side-nav');\n            this.menuShowEl = document.querySelector('.js-menu-show');\n            this.menuHideEl = document.querySelector('.js-menu-hide');\n            this.sideNavContainerEl = document.querySelector('.js-side-nav-container');\n\n            // this.startX = 0;\n            // this.currentX = 0;\n            this.startY = 0;\n            this.currentY = 0;\n            this.touchingSideNav = false;\n\n            this.supportsPassive = undefined;\n            this.addEventListeners();\n        }\n\n        addEventListeners() {\n            this.menuShowEl.addEventListener('click', () => this.showSideNav());\n            this.menuHideEl.addEventListener('click', () => this.hideSideNav());\n            this.el.addEventListener('click', () => this.hideSideNav());\n            this.sideNavContainerEl.addEventListener('click', (e) => this.blockClicks(e));\n\n            this.el.addEventListener('touchstart', (e) => this.onTouchStart(e));\n            this.el.addEventListener('touchmove', (e) => this.onTouchMove(e));\n            this.el.addEventListener('touchend', (e) => this.onTouchEnd(e));\n        }\n\n        onTouchStart(e) {\n            if (!this.el.classList.contains('side-nav--visible')) {\n                return;\n            }\n\n            // this.startX = e.touches[0].pageX;\n            // this.currentX = this.startX;\n\n            this.startY = e.touches[0].pageY;\n            this.currentY = this.startY;\n\n            this.touchingSideNav = true;\n            requestAnimationFrame(() => this.update());\n        }\n\n        onTouchMove(e) {\n            if (!this.touchingSideNav) {\n                return;\n            }\n\n            // this.currentX = e.touches[0].pageX;\n            this.currentY = e.touches[0].pageY;\n\n            /**\n             * Instead of updating the translate here we make use of requestanimationframe\n             * Since it loads in a loop, and requestanimationFrame was called in touchstart\n             */\n            // const translateX = Math.min(0, this.currentX - this.startX);\n            // this.sideNavContainerEl.style.transform = `translateX(${translateX}px)`;\n        }\n\n        onTouchEnd() {\n            if (!this.touchingSideNav) {\n                return;\n            }\n\n            this.touchingSideNav = false;\n\n            // const translateX = Math.min(0, this.currentX - this.startX);\n            const translateY = Math.max(0, this.currentY - this.startY);\n            \n            // const sideNavContainerWidth = this.sideNavContainerEl.offsetWidth;\n            // const absTranslateX = Math.abs(translateX);\n\n            const sideNavContainerHeight = this.sideNavContainerEl.offsetHeight;\n            const absTranslateY = Math.abs(translateY);\n\n            this.sideNavContainerEl.style.transform = '';\n\n            // Some elasticity\n            // if (absTranslateX > (sideNavContainerWidth / 3)) {\n            //     this.hideSideNav();\n            // } else {\n            //     this.showSideNav();\n            // }\n\n            // Some elasticity\n            if (absTranslateY > (sideNavContainerHeight / 3)) {\n                this.hideSideNav();\n            } else {\n                this.showSideNav();\n            }\n        }\n\n        update() {\n            if (!this.touchingSideNav) {\n                return;\n            }\n\n            requestAnimationFrame(() => this.update());\n\n            // const translateX = Math.min(0, this.currentX - this.startX);\n            // this.sideNavContainerEl.style.transform = `translateX(${translateX}px)`;\n\n            const translateY = Math.max(0, this.currentY - this.startY);\n            this.sideNavContainerEl.style.transform = `translateY(${translateY}px)`;\n        }\n\n        /**\n         * this.el has the backdrop which hides the nav, we need to prevent hiding the menu\n         * when the container is clicked.\n         */\n        blockClicks(e) {\n            /**\n             * We stop the propagation to call hideNav\n             */\n            e.stopPropagation();\n        }\n\n        onTransitionEnd() {\n            this.el.classList.remove('side-nav--animatable');\n            this.el.removeEventListener('transitionend', () => this.onTransitionEnd());\n        }\n\n        showSideNav() {\n            this.el.classList.add('side-nav--visible');\n            this.el.classList.add('side-nav--animatable');\n            this.el.addEventListener('transitionend', () => this.onTransitionEnd());\n        }\n\n        hideSideNav() {\n            this.el.classList.remove('side-nav--visible');\n            this.el.classList.add('side-nav--animatable');\n            this.el.addEventListener('transitionend', () => this.onTransitionEnd());\n        }\n    }\n\n    return OverflowMenu;\n});","define('datasource/beer',[\n], function() {\n    'use strict';\n\n    const CORS_PROXY = 'https://crossorigin.me/';\n    const API_KEY = 'a17db91bc77bfdd0d14b4053c5cc0a51';\n    const STYLES_ENDPOINT = '/styles';\n    const CATEGORIES_ENDPOINT = '/categories';\n    \n    class Beer {\n        constructor(options) {\n            options || (options = {});\n\n            this.loadingTemplate = document.querySelector('#templates .scroller__item--loading');\n            this.beerTemplate = document.querySelector('#templates .scroller__item');\n            \n            this.url = options.url;\n            this.menuEndpoint = options.menuEndpoint;\n            this.beersEndpoint = options.beersEndpoint;\n\n            this.menuUrl = `${this.url}${this.menuEndpoint}`;\n            this.beerUrl = `${this.url}${this.beersEndpoint}`;\n\n            this.nextItem = 0;\n\n            this.nextPageToken = null;\n        }\n\n        /**\n         * Fetch items from datasource.\n         */\n        fetch(obj) {\n            return new Promise((resolve, reject) => {\n\n                let params = obj.params;\n                if (params && typeof params === 'object') {\n                    params = Object.keys(params).map((key) => {\n                        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n                    }).join('&');\n                }\n\n                const url = params ? obj.url + '?' + params : obj.url;\n\n                let xhr = new XMLHttpRequest();\n                xhr.open(obj.method || 'GET', url);\n\n                xhr.onload = () => {\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        resolve(xhr.response);\n                    } else {\n                        reject(xhr.statusText);\n                    }\n                };\n\n                xhr.onerror = () => {\n                    reject(xhr.statusText);\n                };\n\n                // let params = obj.params;\n                // if (params && typeof params === 'object') {\n                //     params = Object.keys(params).map((key) => {\n                //         return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n                //     }).join('&');\n                // }\n                xhr.send();\n            });\n        }\n\n        getStyles() {\n            let options = {\n                method: 'GET',\n                url: `${CORS_PROXY}${this.menuUrl}${STYLES_ENDPOINT}?key=${API_KEY}`\n            };\n\n            return this.fetch(options).then((response) => {\n                let jsonResponse = JSON.parse(response);\n                return jsonResponse.data || [];\n            });\n        }\n\n        getCategories() {\n            let options = {\n                method: 'GET',\n                url: `${CORS_PROXY}${this.menuUrl}${CATEGORIES_ENDPOINT}?key=${API_KEY}`\n            };\n\n            return this.fetch(options).then((response) => {\n                let jsonResponse = JSON.parse(response);\n                return jsonResponse.data || [];\n            });\n        }\n\n        getBeer() {\n            let options = {\n                method: 'GET',\n                url: `${CORS_PROXY}${this.beerUrl}?key=${API_KEY}`\n            };\n\n            if (this.nextPageToken) {\n                // options.params = {\n                //     styleId: 1\n                // };\n                Object.assign(options, {\n                    params: {\n                        styleId: 1\n                    }\n                });\n            }\n\n            return this.fetch(options).then((response) => {\n                let jsonResponse = JSON.parse(response);\n                this.nextPageToken = jsonResponse.pageToken;\n                return jsonResponse.data || [];\n            });\n        }\n\n        // next() {\n        //     let options = {\n        //         method: 'GET',\n        //         url: this.dataUrl\n        //     };\n\n        //     if (this.nextPageToken) {\n        //         options.params = {\n        //             pageToken: this.nextPageToken\n        //         };\n        //         // Object.assign(options, {\n        //         //     params: {\n        //         //         pageToken: this.nextPageToken\n        //         //     }\n        //         // });\n        //     }\n\n        //     return this.fetch(options).then((response) => {\n        //         let jsonResponse = JSON.parse(response);\n        //         this.nextPageToken = jsonResponse.pageToken;\n        //         return jsonResponse.messages;\n        //     });\n\n        //     // return this.fetch(options);\n        // }\n\n        /**\n         * Create a loading element, all loading elements are identical\n         */\n        createLoadingElement() {\n            return this.loadingTemplate.cloneNode(true);\n        }\n\n        /**\n         * Render an item, reusing the provided div if provided\n         */\n        render(item, div) {\n            div = div || this.beerTemplate.cloneNode(true);\n\n            div.dataset.id = item.id;\n\n            div.querySelector('.card__title').textContent = item.name;\n            // div.querySelector('.card__subtitle').textContent = this.timeSince(new Date(item.updated)); //item.updated.toString();\n            div.querySelector('.card__subtitle').textContent = item.style.shortName;\n            div.querySelector('.card__note').textContent = `${item.abv}% ABV${item.ibu ? ', ' + item.ibu + ' IBU' : ''}`;\n            div.querySelector('.card__content').textContent = item.description;\n\n            return div;\n        }\n\n        timeSince(date) {\n            if (typeof date !== 'object') {\n                date = new Date(date);\n            }\n\n            let seconds = Math.floor((new Date() - date) / 1000),\n                interval = Math.floor(seconds / 31536000);\n\n            if (interval >= 1) {\n                return `${interval} year${interval > 1 ? 's' : ''} ago`;\n            }\n\n            interval = Math.floor(seconds / 2592000);\n            if (interval >= 1) {\n                return `${interval} month${interval > 1 ? 's' : ''} ago`;\n            }\n\n            interval = Math.floor(seconds / 86400);\n            if (interval >= 1) {\n                return `${interval} day${interval > 1 ? 's' : ''} ago`;\n            }\n\n            interval = Math.floor(seconds / 3600);\n            if (interval >= 1) {\n                return `${interval} hour${interval > 1 ? 's' : ''} ago`;\n            }\n\n            interval = Math.floor(seconds / 3600);\n            if (interval >= 1) {\n                return `${interval} minute${interval > 1 ? 's' : ''} ago`;\n            }\n\n            return `${interval} second${interval > 1 ? 's' : ''} ago`;\n        }\n    }\n\n    return Beer;\n});"]}